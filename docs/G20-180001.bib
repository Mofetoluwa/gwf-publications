@article{Mostaeen-2020-A,
    title = "A machine learning based framework for code clone validation",
    author = "Mostaeen, Golam  and
      Roy, Banani  and
      Roy, Chanchal K.  and
      Schneider, Kevin  and
      Svajlenko, Jeffrey",
    journal = "Journal of Systems and Software, Volume 169",
    volume = "169",
    year = "2020",
    publisher = "Elsevier BV",
    url = "https://gwf-uwaterloo.github.io/gwf-publications/G20-32001",
    doi = "10.1016/j.jss.2020.110686",
    pages = "110686",
    abstract = "Abstract A code clone is a pair of code fragments, within or between software systems that are similar. Since code clones often negatively impact the maintainability of a software system, several code clone detection techniques and tools have been proposed and studied over the last decade. However, the clone detection tools are not always perfect and their clone detection reports often contain a number of false positives or irrelevant clones from specific project management or user perspective. To detect all possible similar source code patterns in general, the clone detection tools work on the syntax level while lacking user-specific preferences. This often means the clones must be manually inspected before analysis in order to remove those false positives from consideration. This manual clone validation effort is very time-consuming and often error-prone, in particular for large-scale clone detection. In this paper, we propose a machine learning approach for automating the validation process. First, a training dataset is built by taking code clones from several clone detection tools for different subject systems and then manually validating those clones. Second, several features are extracted from those clones to train the machine learning model by the proposed approach. The trained algorithm is then used to automatically validate clones without human inspection. Thus the proposed approach can be used to remove the false positive clones from the detection results, automatically evaluate the precision of any clone detectors for any given set of datasets, evaluate existing clone benchmark datasets, or even be used to build new clone benchmarks and datasets with minimum effort. In an experiment with clones detected by several clone detectors in several different software systems, we found our approach has an accuracy of up to 87.4{\%} when compared against the manual validation by multiple expert judges. The proposed method also shows better results in several comparative studies with the existing related approaches for clone classification.",
}
