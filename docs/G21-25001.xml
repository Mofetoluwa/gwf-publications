<?xml version="1.0" encoding="UTF-8"?>
<modsCollection xmlns="http://www.loc.gov/mods/v3">
<mods ID="Nath-2021-Automatically">
    <titleInfo>
        <title>Automatically Generating Release Notes with Content Classification Models</title>
    </titleInfo>
    <name type="personal">
        <namePart type="given">Sristy</namePart>
        <namePart type="given">Sumana</namePart>
        <namePart type="family">Nath</namePart>
        <role>
            <roleTerm authority="marcrelator" type="text">author</roleTerm>
        </role>
    </name>
    <name type="personal">
        <namePart type="given">Banani</namePart>
        <namePart type="family">Roy</namePart>
        <role>
            <roleTerm authority="marcrelator" type="text">author</roleTerm>
        </role>
    </name>
    <originInfo>
        <dateIssued>2021</dateIssued>
    </originInfo>
    <typeOfResource>text</typeOfResource>
    <genre authority="bibutilsgt">journal article</genre>
    <relatedItem type="host">
        <titleInfo>
            <title>International Journal of Software Engineering and Knowledge Engineering, Volume 31, Issue 11n12</title>
        </titleInfo>
        <originInfo>
            <issuance>continuing</issuance>
            <publisher>World Scientific Pub Co Pte Ltd</publisher>
        </originInfo>
        <genre authority="marcgt">periodical</genre>
        <genre authority="bibutilsgt">academic journal</genre>
    </relatedItem>
    <abstract>Release notes are admitted as an essential technical document in software maintenance. They summarize the main changes, e.g. bug fixes and new features, that have happened in the software since the previous release. Manually producing release notes is a time-consuming and challenging task. For that reason, sometimes developers neglect to write release notes. For example, we collect data from GitHub with over 1900 releases, and among them, 37% of the release notes are empty. To mitigate this problem, we propose an automatic release notes generation approach by applying the text summarization techniques, i.e. TextRank. To improve the keyword extraction method of traditional TextRank, we integrate the GloVe word embedding technique with TextRank. After generating release notes automatically, we apply machine learning algorithms to classify the release note contents (or sentences). We classify the contents into six categories, e.g. bug fixes and performance improvements, to represent the release notes better for users. We use the evaluation metric, e.g. ROUGE, to evaluate the automatically generated release notes. We also compare the performance of our technique with two popular extractive algorithms, e.g. Luhn’s and latent semantic analysis (LSA). Our evaluation results show that the improved TextRank method outperforms the two algorithms.</abstract>
    <identifier type="citekey">Nath-2021-Automatically</identifier>
    <identifier type="doi">10.1142/s0218194021400192</identifier>
    <location>
        <url>https://aclanthology.org/G21-25001</url>
    </location>
    <part>
        <date>2021</date>
        <detail type="volume"><number>31</number></detail>
        <detail type="issue"><number>11</number></detail>
        <extent unit="page">
            <start>1721</start>
            <end>1740</end>
        </extent>
    </part>
</mods>
</modsCollection>
